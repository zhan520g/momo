<?xml version="1.0" encoding="utf-8"?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="info"
      internalLogFile="Logs\internal-nlog.txt">

  <!-- enable asp.net core and mongodb layout renderers  
  extensions：：当你不仅仅只使用 NLog 这一个基础的 dll ，并使用了一些基于 NLog 扩展的工具时，你就需要在 extensions 节点下面添加引用的程序集名称。例如，这里，我添加了 NLog.Web.AspNetCore 这个程序集从而达到 NLog 对于 ASP.NET Core 的支持，以及添加了 NLog.Mongo 这个程序集用来将日志信息输出到 MongoDB 中。-->
  <extensions>
    <add assembly="NLog.Web.AspNetCore"/>
    <add assembly="NLog.Mongo"/>
  </extensions>

  <!--internal-nlog:NLog启动及加载config信息-->
  <!--nlog-all:所有日志记录信息-->
  <!--nlog-own:自定义日志记录信息-->

  <!-- the targets to write to 
  targets：targets 节点下包含了我们需要输出的日志的信息内容以及日志信息的布局，例如，这里我按照日期输出两个文件 nlog-all-date.log 和 nlog-own-date.log，分别记录所有的日志信息以及我们自定义记录的信息。因为我们是需要将日志信息写入 MongoDB 中的，这里我也添加了一个子节点用来设置写入 MongoDB 数据库中的数据字段。-->
  <targets>
    <!-- write logs to file  -->
    <target xsi:type="File" name="allfile" fileName="Logs\nlog-all-${shortdate}.log"
            layout="日志记录时间：${longdate}${newline}日志级别：${uppercase:${level}}${newline}日志来源：${logger}${newline}日志信息：${message}${newline}错误信息：${exception:format=tostring}${newline}==============================================================${newline}" />

    <!-- another file log, only own logs. Uses some ASP.NET core renderers -->
    <target xsi:type="File" name="ownFile-web" fileName="Logs\nlog-own-${shortdate}.log"
            layout="日志记录时间：${longdate}${newline}日志级别：${uppercase:${level}}${newline}日志来源：${logger}${newline}日志信息：${message}${newline}错误信息：${exception:format=tostring}${newline}url: ${aspnet-request-url}${newline}action: ${aspnet-mvc-action}${newline}==============================================================${newline}" />

    <!-- write log to mongodb
    mongodb://test:123456@119.23.63.123:27017/test  用户名:密码@IP:端口号/数据库-->
    <target xsi:type="Mongo"
            name="mongo" databaseName="test"
            collectionName="Logs"
            connectionString="mongodb://test:123456@127.0.0.1:27017/test"
            cappedCollectionSize="26214400">
      <property name="LongDate" layout="${longdate}" bsonType="DateTime" />
      <property name="Level" layout="${level}" />
      <property name="Logger" layout="${logger}"/>
      <property name="Message" layout="${message}" />
      <property name="Exception" layout="${exception:format=tostring}" />
      <property name="Url" layout="${aspnet-request-url}" />
      <property name="Action" layout="${aspnet-mvc-action}" />
      <property name="UserName" layout="no" />
    </target>

  </targets>

  <!-- rules to map from logger name to target
  rules：rules 节点是将需要记录的日志级别关联到记录日志的方式上。这里，我是将只要是 Trace 以上的都进行日志记录。-->
  <rules>
    <!--All logs, including from Microsoft-->
    <logger name="*" minlevel="Trace" writeTo="allfile" />

    <!--Skip non-critical Microsoft logs and so log only own logs-->
    <logger name="Microsoft.*" maxLevel="Info" final="true" />
    <!-- BlackHole without writeTo -->
    <logger name="*" minlevel="Trace" writeTo="ownFile-web" />

    <!--Add logs to mongodb-->
    <logger name="*" minlevel="Trace" writeTo="mongo"/>
  </rules>
</nlog>    